{"version":3,"sources":["api/index.ts","actions/index.ts","components/Navbar.tsx","components/Product.tsx","components/StatusLoading.tsx","pages/Main.tsx","pages/Qualities.tsx","components/NotExist.tsx","pages/Quality.tsx","pages/Cart.tsx","pages/Page404.tsx","App.tsx","serviceWorker.ts","reducers/index.ts","index.tsx"],"names":["fetchProductsApi","a","Promise","resolve","setTimeout","products","fetchResult","id","title","text","image","onMain","price","quantity","nonExistentProduct","Date","now","toString","addToCart","type","payload","fetchProducts","dispatch","then","result","catch","Navbar","useState","isOpen","setIsOpen","location","useLocation","history","useHistory","useEffect","toogleOpen","prev","className","classes","push","join","getClasses","onClick","goBack","pathname","to","activeClassName","exact","Product","product","showQuantity","button","link","url","src","alt","func","disabled","StatusLoading","status","mapDispatchToProps","connect","state","filter","item","map","key","cartTotal","cart","length","NotExist","match","find","params","removeFromCart","reduce","arr","indexInArr","findIndex","indexInProducts","totalPrice","total","Page404","fetchProductsReady","path","component","Main","Qualities","Quality","Cart","Boolean","window","hostname","combineReducers","action","store","createStore","reducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9228a302.chunk.js","sourcesContent":["export const fetchProductsApi = async () => {\r\n    const fetchResult = await new Promise(resolve => setTimeout(() => resolve(products), 1000));\r\n\r\n    return fetchResult;\r\n}\r\n\r\nconst products = [\r\n    {\r\n        id: '1',\r\n        title: 'Sense of humor',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n        image: 'https://askhatxx.github.io/human-qualities-shop/images/01.jpg',\r\n        onMain: false,\r\n        price: 3200,\r\n        quantity: 100\r\n    },\r\n    {\r\n        id: '2',\r\n        title: 'Health',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n        image: 'https://askhatxx.github.io/human-qualities-shop/images/02.jpg',\r\n        onMain: false,\r\n        price: 5300,\r\n        quantity: 100\r\n    },\r\n    {\r\n        id: '3',\r\n        title: 'Supermind',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n        image: 'https://askhatxx.github.io/human-qualities-shop/images/03.jpg',\r\n        onMain: true,\r\n        price: 2600,\r\n        quantity: 100\r\n    },\r\n    {\r\n        id: '4',\r\n        title: 'Calm',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n        image: 'https://askhatxx.github.io/human-qualities-shop/images/04.jpg',\r\n        onMain: true,\r\n        price: 5800,\r\n        quantity: 100\r\n    },\r\n    {\r\n        id: '5',\r\n        title: 'Power',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n        image: 'https://askhatxx.github.io/human-qualities-shop/images/05.jpg',\r\n        onMain: true,\r\n        price: 1800,\r\n        quantity: 0\r\n    },\r\n    {\r\n        id: '6',\r\n        title: 'Style',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n        image: 'https://askhatxx.github.io/human-qualities-shop/images/06.jpg',\r\n        onMain: false,\r\n        price: 1400,\r\n        quantity: 0\r\n    },\r\n    {\r\n        id: '7',\r\n        title: 'Stress resistance',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n        image: 'https://askhatxx.github.io/human-qualities-shop/images/07.jpg',\r\n        onMain: true,\r\n        price: 4500,\r\n        quantity: 0\r\n    },\r\n    {\r\n        id: '8',\r\n        title: 'Equanimity',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n        image: 'https://askhatxx.github.io/human-qualities-shop/images/08.jpg',\r\n        onMain: true,\r\n        price: 2000,\r\n        quantity: 100\r\n    },\r\n    {\r\n        id: '9',\r\n        title: 'Charisma',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\r\n        image: 'https://askhatxx.github.io/human-qualities-shop/images/09.jpg',\r\n        onMain: true,\r\n        price: 4500,\r\n        quantity: 100\r\n    },\r\n];\r\n\r\nexport const nonExistentProduct = (id: string) => {\r\n    return {\r\n        id: id || Date.now().toString(), \r\n        title: 'Does not exist', \r\n        text: '404', \r\n        image: 'https://askhatxx.github.io/human-qualities-shop/images/img404.jpg', \r\n        onMain: false, \r\n        price: 0, \r\n        quantity: 1\r\n    };\r\n}","import {fetchProductsApi} from '../api';\r\n\r\nexport const addToCart = (id: string) => {\r\n    return {\r\n        type: 'ADD_TO_CART',\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (id: string) => {\r\n    return {\r\n        type: 'REMOVE_FROM_CART',\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const fetchProducts = (dispatch: any) => {\r\n    return () => {\r\n        dispatch({type: 'STATUS_LOADING'});\r\n        \r\n        fetchProductsApi()\r\n            .then(result => {\r\n                dispatch({type: 'FETCH_PRODUCTS', payload: result});\r\n                dispatch({type: 'STATUS_SUCCESS'});\r\n            })\r\n            .catch(() => {\r\n                dispatch({type: 'STATUS_ERROR'});\r\n            })\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {NavLink, useLocation, useHistory} from 'react-router-dom';\r\n\r\nconst Navbar: React.FC = () => {\r\n    const [isOpen,setIsOpen] = useState<boolean>(false);\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    \r\n    useEffect(() => {\r\n        setIsOpen(false);\r\n    }, [location]);\r\n\r\n    const toogleOpen = () => {\r\n        setIsOpen(prev => !prev);\r\n    }\r\n\r\n    const getClasses = () => {\r\n        const classes = ['navbar'];\r\n\r\n        if (isOpen) {\r\n            classes.push('open');\r\n        }\r\n\r\n        return classes.join(' ');\r\n    }\r\n\r\n    const getClassesBack = () => {\r\n        return location.pathname === '/' ? 'back hidden' : 'back';\r\n    }\r\n\r\n    return (\r\n        <nav className={getClasses()}>\r\n            <div onClick={() => {history.goBack()}} className={getClassesBack()}>←</div>\r\n            <div className=\"brend\">\r\n                <NavLink to=\"/\">Human Qualities Shop</NavLink>\r\n            </div>\r\n            <button className=\"btn-menu\" onClick={toogleOpen}>≡</button>\r\n            <div className=\"menu collapse\">\r\n                <button className=\"btn-close\" onClick={toogleOpen}>×</button>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to=\"/\" activeClassName=\"active\" exact>Main</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/qualities\" activeClassName=\"active\">Qualities</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/cart\" activeClassName=\"active\">Cart</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {IProduct} from '../interfaces';\r\n\r\ntype ProductProps = {\r\n    className?: string,\r\n    product: IProduct,\r\n    showQuantity?: boolean,\r\n    button?: {text: string, func: () => void},\r\n    link?: {text: string, url: string}\r\n}\r\n\r\nconst Product: React.FC<ProductProps> = ({className, product, showQuantity, button, link}) => {\r\n    return (\r\n        <div className={!!className ? className : ''}>\r\n            <div className='product'>\r\n                <div className='product-image'>\r\n                    {link ? \r\n                        <NavLink to={link.url}><img src={product.image} alt={product.title}/></NavLink>\r\n                        : <img src={product.image} alt={product.title}/>\r\n                    }\r\n                </div>\r\n                <div className='product-options'>\r\n                    <div className='product-title'>{product.title}</div>\r\n                    <div className='product-text'>{product.text}</div>\r\n                    <div className='product-price'>Price: {product.price}</div>\r\n                    {showQuantity && <div className='product-quantity'>Quantity: {product.quantity}</div>}\r\n                    {link && (\r\n                        <NavLink \r\n                            className='product-link btn' \r\n                            to={link.url}\r\n                        >\r\n                            {link.text}\r\n                        </NavLink>\r\n                    )}\r\n                    {button && (\r\n                        <button \r\n                            className='product-button btn' \r\n                            onClick={button.func} disabled={product.quantity === 0}\r\n                        >\r\n                            {product.quantity === 0 ? 'Sold Out' : button.text}\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Product;","import React from 'react';\r\n\r\ntype StatusLoadingProps = {\r\n    status: string\r\n}\r\n\r\nconst StatusLoading: React.FC<StatusLoadingProps> = ({status}) => {\r\n    if (status === 'STATUS_ERROR') {\r\n        return (\r\n            <h1>Error</h1>\r\n        );\r\n    }\r\n\r\n    if (status === 'STATUS_LOADING') {\r\n        return (\r\n            <div className=\"spinner\">\r\n                <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <h1>Something went wrong</h1>\r\n    );\r\n}\r\n\r\nexport default StatusLoading;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addToCart} from '../actions';\r\nimport Product from '../components/Product';\r\nimport StatusLoading from '../components/StatusLoading';\r\nimport {IProduct, IState} from '../interfaces';\r\n\r\ntype MainProps = {\r\n    products: Array<IProduct>,\r\n    status: string,\r\n    addToCart: (id: string) => void\r\n}\r\n\r\nconst Main: React.FC<MainProps> = ({products, status, addToCart}) => {\r\n    if (status !== 'STATUS_SUCCESS') {\r\n        return <StatusLoading status={status}/>\r\n    }\r\n\r\n    return (\r\n        <div className='main'>\r\n            <div className='page-title page-title-main'>\r\n                <h2>Best of the week</h2>\r\n            </div>\r\n            <div className='row products'>\r\n                {products.map(item => {\r\n                    return (\r\n                        <Product\r\n                            className='col'\r\n                            product={item}\r\n                            showQuantity={false}\r\n                            button={{text: 'Add to cart', func: () => addToCart(item.id)}}\r\n                            link={{text: 'More info', url: `/qualities/${item.id}`}}\r\n                            key={item.id}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n    return {\r\n        products: state.products.filter(item => item.onMain),\r\n        status: state.status\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addToCart\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addToCart} from '../actions';\r\nimport Product from '../components/Product';\r\nimport StatusLoading from '../components/StatusLoading';\r\nimport {IProduct, IState} from '../interfaces';\r\n\r\ntype QualitiesProps = {\r\n    products: Array<IProduct>,\r\n    cartTotal: number,\r\n    status: string,\r\n    addToCart: (id: string) => void\r\n}\r\n\r\nconst Qualities: React.FC<QualitiesProps> = ({products, cartTotal, status, addToCart}) => {\r\n    if (status !== 'STATUS_SUCCESS') {\r\n        return <StatusLoading status={status}/>\r\n    }\r\n    \r\n    return (\r\n        <div className='qualities'>\r\n            <div className='page-title'>\r\n                <h2>All products</h2>\r\n                <div>{cartTotal !== 0 ? `Cart: ${cartTotal}` : 'Cart is empty'}</div>\r\n            </div>\r\n            <div className='row products'>\r\n                {products.map(item => {\r\n                    return (\r\n                        <Product\r\n                            className='col'\r\n                            product={item}\r\n                            showQuantity={false}\r\n                            button={{text: 'Add to cart', func: () => addToCart(item.id)}}\r\n                            link={{text: 'More info', url: `/qualities/${item.id}`}}\r\n                            key={item.id}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n    return {\r\n        products: [...state.products],\r\n        cartTotal: state.cart.length,\r\n        status: state.status\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addToCart\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Qualities);","import React from 'react';\r\n\r\nconst NotExist: React.FC = () => {\r\n    return (\r\n        <div className='not-exist'>Product does not exist :(</div>\r\n    );\r\n}\r\n\r\nexport default NotExist;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {addToCart} from '../actions';\r\nimport NotExist from '../components/NotExist';\r\nimport Product from '../components/Product';\r\nimport StatusLoading from '../components/StatusLoading';\r\nimport {IProduct, IState} from '../interfaces';\r\n\r\ntype QualityProps = {\r\n    products: Array<IProduct>,\r\n    cartTotal: number,\r\n    status: string,\r\n    addToCart: (id: string) => void,\r\n    match: {params: {id: string}}\r\n}\r\n\r\nconst Quality: React.FC<QualityProps> = ({products, cartTotal, status, addToCart, match}) => {\r\n    if (status !== 'STATUS_SUCCESS') {\r\n        return <StatusLoading status={status}/>\r\n    }\r\n    \r\n    const item = products.find(item => item.id === match.params.id);\r\n\r\n    if (!item) {\r\n        return <NotExist/>\r\n    }\r\n\r\n    return (\r\n        <div className='quality'>\r\n            <div className='page-title'>\r\n                <h2>Quality description</h2>\r\n                <div>{cartTotal !== 0 ? `Cart: ${cartTotal}` : 'Cart is empty'}</div>\r\n            </div>\r\n            <Product\r\n                product={item}\r\n                showQuantity={false}\r\n                button={{text: 'Add to cart', func: () => addToCart(item.id)}}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n    return {\r\n        products: [...state.products],\r\n        cartTotal: state.cart.length,\r\n        status: state.status\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addToCart\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quality);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {removeFromCart} from '../actions';\r\nimport {nonExistentProduct} from '../api';\r\nimport Product from '../components/Product';\r\nimport StatusLoading from '../components/StatusLoading';\r\nimport {IProduct, IState} from '../interfaces';\r\n\r\ntype CartProps = {\r\n    cart: Array<IProduct>,\r\n    status: string,\r\n    removeFromCart: (id: string) => void\r\n}\r\n\r\nconst Cart: React.FC<CartProps> = ({cart, status, removeFromCart}) => {\r\n    if (status !== 'STATUS_SUCCESS') {\r\n        return <StatusLoading status={status}/>\r\n    }\r\n    \r\n    const totalPrice = cart.reduce((total, item) => total + item.price * item.quantity, 0);\r\n\r\n    return (\r\n        <div className='cart'>\r\n            <div className='page-title'>\r\n                <h2>Your cart</h2>\r\n                <div>Total price: {totalPrice}</div>\r\n            </div>\r\n            {cart.length === 0 ? (\r\n                <div className='cart-empty'>Cart is empty</div>\r\n            ) : (\r\n                <div className='products'>\r\n                    {cart.map(item => {\r\n                        return (\r\n                            <Product \r\n                                product={item}\r\n                                showQuantity={true}\r\n                                button={{text: 'Remove from cart', func: () => removeFromCart(item.id)}}\r\n                                link={{text: 'More info', url: `/qualities/${item.id}`}}\r\n                                key={item.id}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n    return {\r\n        cart: state.cart.reduce((arr: Array<IProduct>, id: string) => {\r\n            const indexInArr = arr.findIndex(item => item.id === id);\r\n            \r\n            if (indexInArr !== -1) {\r\n                arr[indexInArr].quantity++;\r\n                return [...arr];\r\n            }\r\n\r\n            const indexInProducts = state.products.findIndex(item => item.id === id);\r\n\r\n            if (indexInProducts !== -1) {\r\n                return [...arr, {...state.products[indexInProducts], quantity: 1}];\r\n            }\r\n\r\n            return [...arr, nonExistentProduct(id)];\r\n        }, []),\r\n        status: state.status\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    removeFromCart\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Page404: React.FC = () => {\r\n    return (\r\n        <div className='page-404'>Page 404 <NavLink to=\"/\">Homepage ></NavLink></div>\r\n    )\r\n}\r\n\r\nexport default Page404;","import React, {useEffect} from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {fetchProducts} from './actions';\r\nimport NavLink from './components/Navbar';\r\nimport Main from './pages/Main';\r\nimport Qualities from './pages/Qualities';\r\nimport Quality from './pages/Quality';\r\nimport Cart from './pages/Cart';\r\nimport Page404 from './pages/Page404';\r\n\r\ntype AppProps = {\r\n    fetchProductsReady: () => void\r\n}\r\n\r\nconst App: React.FC<AppProps> = ({fetchProductsReady}) => {\r\n    useEffect(() => {\r\n        fetchProductsReady()\r\n    });\r\n    \r\n    return (\r\n        <BrowserRouter>\r\n            <header className='head'>\r\n                <div className='container'>\r\n                    <NavLink/>\r\n                </div>\r\n            </header>\r\n            <div className='container padding-container'>\r\n                <Switch>\r\n                    <Route path='/' exact component={Main} />\r\n                    <Route path='/qualities' exact component={Qualities} />\r\n                    <Route path='/qualities/:id' exact component={Quality} />\r\n                    <Route path='/cart' component={Cart} />\r\n                    <Route path='/' component={Page404} />\r\n                </Switch>\r\n            </div>\r\n            <footer className='footer'>\r\n                <div className='container'>\r\n                    HQS - Lorem ipsum dolor sit amet...\r\n                </div>\r\n            </footer>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        fetchProductsReady: fetchProducts(dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\r\nimport {IAction} from '../interfaces';\r\n\r\nconst products = (state = [], action: IAction) => {\r\n    switch (action.type) {\r\n        case 'FETCH_PRODUCTS':\r\n            return [...state, ...action.payload]\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst cart = (state = [], action: IAction) => {\r\n    switch (action.type) {\r\n        case 'ADD_TO_CART':\r\n            return [...state, action.payload];\r\n        case 'REMOVE_FROM_CART':\r\n            return state.filter(item => item !== action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst status = (state = 'STATUS_LOADING', action: IAction) => {\r\n    switch (action.type) {\r\n        case 'STATUS_LOADING':\r\n            return action.type;\r\n        case 'STATUS_SUCCESS':\r\n            return action.type;\r\n        case 'STATUS_ERROR':\r\n            return action.type;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    products,\r\n    cart,\r\n    status\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}
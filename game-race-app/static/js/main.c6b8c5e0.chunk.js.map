{"version":3,"sources":["AppStyled.js","components/car/CarStyled.js","components/car/index.js","components/car/Car.js","components/listCars/index.js","components/listCars/ListCars.js","components/settings/SettingsStyled.js","components/mode/ModeStyled.js","components/mode/index.js","components/mode/Mode.js","components/settings/index.js","components/settings/Settings.js","components/touchControl/TouchControlStyled.js","components/touchControl/index.js","components/touchControl/TouchControl.js","App.js","index.js"],"names":["GameWrapper","styled","div","GameArena","props","size","width","height","GameDistance","CarBox","colorCar","widthCar","heightCar","Car","color","left","top","style","className","ListCars","cars","map","item","key","id","SettingsBox","ModeBox","Mode","controlButtons","gameStart","qtPlayers","listBtn","itemKey","onClick","Settings","index","slice","TouchBox","TouchSection","TouchBtn","button","TouchControl","keyDown","keyUp","keys","onMouseDown","code","onMouseUp","onTouchStart","onTouchEnd","bottom","right","AppClass","initDirection","isLeft","isRight","isTop","isBottom","initConfig","quantityBots","quantityPlayers","sizeArena","getSizeArena","gameOver","distance","speedBots","speedPlayers","initState","bots","initBots","config","players","initPlayers","quantity","botsCarsList","randomPosition","playersCarsList","Math","round","document","documentElement","clientWidth","clientHeight","event","i","direction","order","random","collisionCheck","car1","car2","collision","lostIndex","Set","forEach","itemCheck","indexCheck","add","itemBot","filter","has","renderGame","setState","prevState","result","length","type","findIndex","dir","requestAnimationFrame","state","addEventListener","this","removeEventListener","toFixed","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c6b8c5e0.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const GameWrapper = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: #0fc196;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const GameArena = styled.div`\r\n    width: ${props => props.size.width}px;\r\n    height: ${props => props.size.height}px;\r\n    background: #999999;\r\n    position: relative;\r\n    overflow: hidden;\r\n    border-radius: 8px;\r\n`;\r\n\r\nexport const GameDistance = styled.div` \r\n    position: absolute;\r\n    top: 5px;\r\n    left: 10px;\r\n    color: #e8e8e8;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const CarBox = styled.div`\r\n    background: ${props => props.colorCar};\r\n    width: ${props => props.widthCar}px;\r\n    height: ${props => props.heightCar}px;\r\n    border-radius: 6px;\r\n    position: absolute;\r\n    box-shadow: 0px 4px 6px 0px rgba(0, 0, 0, .25);\r\n\r\n    .glass {\r\n        background: #444;\r\n        position: absolute;\r\n        width: 70%;\r\n        height: 20%;\r\n        left: 15%;\r\n    }\r\n\r\n    .glass-f {\r\n        top: 15%;\r\n        border-radius: 2px 2px 8px 8px;\r\n    }\r\n\r\n    .glass-b {\r\n        top: 65%;\r\n        border-radius: 8px 8px 2px 2px;\r\n    }\r\n\r\n    .wheel {\r\n        background: #444;\r\n        position: absolute;\r\n        width: 8%;\r\n        height: 20%;\r\n    }\r\n\r\n    .wheel-f-l {\r\n        top: 15%;\r\n        left: -8%;\r\n        border-radius: 3px 0 0 3px;\r\n    }\r\n\r\n    .wheel-f-r {\r\n        top: 15%;\r\n        left: 100%;\r\n        border-radius: 0 3px 3px 0;\r\n    }\r\n\r\n    .wheel-b-l {\r\n        top: 65%;\r\n        left: -8%;\r\n        border-radius: 3px 0 0 3px;\r\n    }\r\n\r\n    .wheel-b-r {\r\n        top: 65%;\r\n        left: 100%;\r\n        border-radius: 0 3px 3px 0;\r\n    }\r\n`;","import Car from './Car';\r\nexport default Car;","import React from 'react';\r\nimport {CarBox} from './CarStyled';\r\n\r\nexport default function Car({color: colorCar, width: widthCar, height: heightCar, left, top}) {\r\n    return (\r\n        <CarBox {...{colorCar, widthCar, heightCar}} style={{left: `${left}px`, top: `${top}px`}}>\r\n            <div className='glass glass-f'></div>\r\n            <div className='glass glass-b'></div>\r\n            <div className='wheel wheel-f-l'></div>\r\n            <div className='wheel wheel-f-r'></div>\r\n            <div className='wheel wheel-b-l'></div>\r\n            <div className='wheel wheel-b-r'></div>\r\n        </CarBox>\r\n    );\r\n}","import ListCars from './ListCars';\r\nexport default ListCars;","import React from 'react';\r\nimport Car from '../car';\r\n\r\nexport default function ListCars({cars}) {\r\n    return (\r\n        <>\r\n            {cars.map(item => <Car key={item.id} {...item} />)}\r\n        </>\r\n    );\r\n}","import styled from 'styled-components';\r\n\r\nexport const SettingsBox = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    width: 100%;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const ModeBox = styled.div`\r\n    background: #FBC5AA;\r\n    margin: 10px;\r\n    padding: 10px;\r\n    width: 200px;\r\n    max-width: 100%;\r\n    border-radius: 8px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .text-players {\r\n        text-align: center;\r\n        font-size: 1.4rem;\r\n\r\n        @media (max-height: 768px) {\r\n            font-size: 1.0rem;\r\n        }\r\n    }\r\n\r\n    .qt-players {\r\n        text-align: center;\r\n        font-size: 2rem;\r\n\r\n        @media (max-height: 768px) {\r\n            font-size: 1.2rem;\r\n        }\r\n    }\r\n\r\n    .control-info {\r\n        flex-grow: 1;\r\n        display: flex;\r\n        font-size: 1rem;\r\n\r\n        .control-list {\r\n            margin-left: 5px;\r\n\r\n            span {\r\n                background: #f5661f;\r\n                border-radius: 4px;\r\n                display: inline-block;\r\n                margin: 0px 2px 10px;\r\n                width: 20px;\r\n                height: 20px;\r\n                line-height: 19px;\r\n                font-size: 14px;\r\n                text-transform: uppercase;\r\n                text-align: center;\r\n                color: #fff;\r\n\r\n                @media (max-height: 768px) {\r\n                    margin: 0px 2px 2px;\r\n                    width: 16px;\r\n                    height: 16px;\r\n                    line-height: 15px;\r\n                    font-size: 11px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .game-start {\r\n        background: #08AD85;\r\n        color: #fff;\r\n        width: 100%;\r\n        border: none;\r\n        border-radius: 6px;\r\n        padding: 3px 0 6px;\r\n        font-size: 1.2rem;\r\n        font-family: inherit;\r\n        line-height: 1.2;\r\n        transition: .2s;\r\n        cursor: pointer;\r\n        outline: none;\r\n\r\n        &:hover {\r\n            background: #039974;\r\n        }\r\n\r\n        @media (max-height: 768px) {\r\n            padding: 2px 0 4px;\r\n            font-size: .9rem;\r\n        }\r\n    }\r\n`;","import Mode from './Mode';\r\nexport default Mode;","import React from 'react';\r\nimport {ModeBox} from './ModeStyled';\r\n\r\nexport default function Mode({controlButtons, gameStart, qtPlayers}) {\r\n    const listBtn = controlButtons.map(item => {\r\n        return (\r\n            <div key={item}>\r\n                {[...item].map(itemKey => <span key={itemKey}>{itemKey}</span>)}\r\n            </div>\r\n        )\r\n    });\r\n    return (\r\n        <ModeBox>\r\n            <div className='text-players'>Players</div>\r\n            <div className='qt-players'>{qtPlayers}</div>\r\n            <div className='control-info'>\r\n                <div>Control:</div>\r\n                <div className='control-list'>{listBtn}</div>\r\n            </div>\r\n            <button className='game-start' onClick={() => gameStart(qtPlayers)}>Start</button>\r\n        </ModeBox>\r\n    );\r\n}","import Settings from './Settings';\r\nexport default Settings;","import React from 'react';\r\nimport {SettingsBox} from './SettingsStyled';\r\nimport Mode from '../mode';\r\n\r\nexport default function Settings({controlButtons, gameStart}) {\r\n    return (\r\n        <SettingsBox>\r\n            {controlButtons.map((item, index) => {\r\n                return (\r\n                    <Mode \r\n                        key={item} \r\n                        controlButtons={controlButtons.slice(0, index + 1)} \r\n                        gameStart={gameStart} \r\n                        qtPlayers={index + 1} \r\n                    />\r\n                )\r\n            })}\r\n        </SettingsBox>\r\n    );\r\n}","import styled from 'styled-components';\r\n\r\nexport const TouchBox = styled.div`\r\n    display: flex;\r\n    padding-top: 10px;\r\n`;\r\n\r\nexport const TouchSection = styled.div`\r\n    padding: 0 5px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const TouchBtn = styled.button`\r\n    background: #f2f2f2;\r\n    width: 80px;\r\n    height: 35px;\r\n    margin: 0px 0;\r\n    border: none;\r\n    border-radius: 6px;\r\n    color: #000;\r\n    transition: .2s;\r\n    cursor: pointer;\r\n    outline: none;\r\n    user-select: none;\r\n\r\n    &:nth-child(2) {\r\n        margin-top: 10px;\r\n    }\r\n\r\n    &:hover {\r\n        background: #d8d8d8;\r\n    }\r\n\r\n    &:active {\r\n        background: #c4c4c4;\r\n    }\r\n`;","import TouchControl from './TouchControl';\r\nexport default TouchControl;","import React from 'react';\r\nimport {TouchBox, TouchSection, TouchBtn} from './TouchControlStyled';\r\n\r\nexport default function TouchControl({keyDown, keyUp, keys}) {\r\n    return (\r\n        <TouchBox>\r\n            <TouchSection>\r\n                <TouchBtn \r\n                    onMouseDown={() => keyDown({code: keys.left})}\r\n                    onMouseUp={() => keyUp({code: keys.left})}\r\n                    onTouchStart={() => keyDown({code: keys.left})}\r\n                    onTouchEnd={() => keyUp({code: keys.left})}\r\n                >←</TouchBtn>\r\n            </TouchSection>\r\n            <TouchSection>\r\n                <TouchBtn\r\n                    onMouseDown={() => keyDown({code: keys.top})}\r\n                    onMouseUp={() => keyUp({code: keys.top})}\r\n                    onTouchStart={() => keyDown({code: keys.top})}\r\n                    onTouchEnd={() => keyUp({code: keys.top})}\r\n                >↑</TouchBtn>\r\n                <TouchBtn\r\n                    onMouseDown={() => keyDown({code: keys.bottom})}\r\n                    onMouseUp={() => keyUp({code: keys.bottom})}\r\n                    onTouchStart={() => keyDown({code: keys.bottom})}\r\n                    onTouchEnd={() => keyUp({code: keys.bottom})}\r\n                >↓</TouchBtn>\r\n            </TouchSection>\r\n            <TouchSection>\r\n                <TouchBtn\r\n                    onMouseDown={() => keyDown({code: keys.right})}\r\n                    onMouseUp={() => keyUp({code: keys.right})}\r\n                    onTouchStart={() => keyDown({code: keys.right})}\r\n                    onTouchEnd={() => keyUp({code: keys.right})}\r\n                >→</TouchBtn>\r\n            </TouchSection>\r\n        </TouchBox>\r\n    );\r\n}","import React, {Component} from 'react';\r\nimport {GameWrapper, GameArena, GameDistance} from './AppStyled';\r\nimport ListCars from './components/listCars';\r\nimport Settings from './components/settings';\r\nimport TouchControl from './components/touchControl';\r\n\r\nexport default class AppClass extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.botsCarsList = [\r\n            {color: '#1d95f9', width: 40, height: 60, left: 0, top: 0, type: 'bot', id: 'bot1'},\r\n            {color: '#1d95f9', width: 40, height: 60, left: 0, top: 0, type: 'bot', id: 'bot2'},\r\n            {color: '#0065b9', width: 50, height: 80, left: 0, top: 0, type: 'bot', id: 'bot3'},\r\n        ];\r\n        this.playersCarsList = [\r\n            {color: '#f5661f', width: 40, height: 60, left: 0, top: 0, type: 'player', id: 'player1'},\r\n            {color: '#ce40ff', width: 40, height: 60, left: 0, top: 0, type: 'player', id: 'player2'},\r\n            {color: '#fc4664', width: 40, height: 60, left: 0, top: 0, type: 'player', id: 'player3'},\r\n        ];\r\n        this.keys  = [\r\n            {left: 'KeyA', right: 'KeyD', top: 'KeyW', bottom: 'KeyS'},\r\n            {left: 'ArrowLeft', right: 'ArrowRight', top: 'ArrowUp', bottom: 'ArrowDown'},\r\n            {left: 'KeyH', right: 'KeyK', top: 'KeyU', bottom: 'KeyJ'},\r\n        ];\r\n\r\n        this.direction = this.initDirection();\r\n        this.config = this.initConfig();\r\n        this.state = this.initState();\r\n    }\r\n\r\n    initDirection = () => {\r\n        return [\r\n            {isLeft: false, isRight: false, isTop: false, isBottom: false, id: 'player1'},\r\n            {isLeft: false, isRight: false, isTop: false, isBottom: false, id: 'player2'},\r\n            {isLeft: false, isRight: false, isTop: false, isBottom: false, id: 'player3'},\r\n        ];\r\n    }\r\n\r\n    initConfig = (qtPlayers = 3) => {\r\n        return {\r\n            quantityBots: 3,\r\n            quantityPlayers: qtPlayers,\r\n            sizeArena: this.getSizeArena(),\r\n            gameOver: false,\r\n            gameStart: false,\r\n            distance: 0,\r\n            speedBots: 3,\r\n            speedPlayers: 4,\r\n        };\r\n    }\r\n\r\n    initState = () => {\r\n        return {\r\n            bots: this.initBots(this.config.quantityBots),\r\n            players: this.initPlayers(this.config.quantityPlayers),\r\n        };\r\n    }\r\n\r\n    initBots = (quantity) => {\r\n        return this.botsCarsList.slice(0, quantity).map((item, index) => {\r\n            return this.randomPosition(item, index + 1);\r\n        });\r\n    }\r\n\r\n    initPlayers = (quantity) => {\r\n        return this.playersCarsList.slice(0, quantity).map((item, index) => {\r\n            const left = Math.round((this.config.sizeArena.width / (quantity + 1) * (index + 1)) - (item.width / 2));\r\n            const top = Math.round(this.config.sizeArena.height - item.height - 20);\r\n\r\n            return {...item, left, top};\r\n        });\r\n    }\r\n\r\n    getSizeArena = () => {\r\n        const {clientWidth, clientHeight} = document.documentElement;\r\n        const width = clientWidth > 1000 ? 900 : Math.round(clientWidth / 100 * 90);\r\n        const height = Math.round(clientHeight / 100 * 96 - 90);\r\n        \r\n        return {width, height};\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.keyDown);\r\n        document.addEventListener('keyup', this.keyUp);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.keyDown);\r\n        document.removeEventListener('keyup', this.keyUp);\r\n    }\r\n\r\n    keyDown = (event) => {\r\n        for (let i = 0; i < this.config.quantityPlayers; i++) {\r\n            if (event.code === this.keys[i].left && !this.direction[i].isLeft) {\r\n                this.direction[i].isLeft = true;\r\n            } else if (event.code === this.keys[i].right && !this.direction[i].isRight) {\r\n                this.direction[i].isRight = true;\r\n            } else if (event.code === this.keys[i].top && !this.direction[i].isTop) {\r\n                this.direction[i].isTop = true;\r\n            } else if (event.code === this.keys[i].bottom && !this.direction[i].isBottom) {\r\n                this.direction[i].isBottom = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    keyUp = (event) => {\r\n        for (let i = 0; i < this.config.quantityPlayers; i++) {\r\n            if (event.code === this.keys[i].left) {\r\n                this.direction[i].isLeft = false;\r\n            } else if (event.code === this.keys[i].right) {\r\n                this.direction[i].isRight = false;\r\n            } else if (event.code === this.keys[i].top) {\r\n                this.direction[i].isTop = false;\r\n            } else if (event.code === this.keys[i].bottom) {\r\n                this.direction[i].isBottom = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    randomPosition = (item, order) => {\r\n        const left = Math.round((this.config.sizeArena.width - item.width) * Math.random());\r\n        const top = -180 * order;\r\n\r\n        return {...item, left, top};\r\n    }\r\n\r\n    collisionCheck = (car1, car2) => {\r\n        if (car1.top - (car2.top + car2.height) < 0 && (car1.top + car1.height) - car2.top > 0) {\r\n            if (car1.left - (car2.left + car2.width) < 0 && (car1.left + car1.width) - car2.left > 0) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    collision = ({bots, players}) => {        \r\n            let lostIndex = new Set();\r\n\r\n            players.forEach((item, index) => {\r\n                players.forEach((itemCheck, indexCheck) => {\r\n                    if (index !== indexCheck) {\r\n                        if (this.collisionCheck(item, itemCheck)) {lostIndex.add(index);}\r\n                    }\r\n                });\r\n                \r\n                bots.forEach((itemBot) => {\r\n                    if (this.collisionCheck(item, itemBot)) {lostIndex.add(index);}\r\n                });\r\n            });\r\n\r\n            players = players.filter((item, index) => {\r\n                if (lostIndex.has(index)) {\r\n                    bots = [...bots, item];\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            return {bots, players};\r\n    }\r\n\r\n    renderGame = () => {\r\n        this.setState(prevState => {            \r\n            const result = this.collision({bots: prevState.bots, players: prevState.players});\r\n\r\n            if (result.players.length === 0) {\r\n                this.config.gameOver = true;\r\n                this.config.gameStart = false;\r\n                return result;\r\n            }\r\n            \r\n            let bots = result.bots.map(item => {\r\n                const top = item.top + this.config.speedBots;\r\n    \r\n                if (top > this.config.sizeArena.height) {\r\n                    return this.randomPosition(item, 1);\r\n                }\r\n                \r\n                return {...item, top};\r\n            });\r\n\r\n            bots = bots.filter(item => {\r\n                if (item.type === 'player' && item.top < 0) return false;\r\n                return true;\r\n            });\r\n            \r\n            const players = result.players.map((item) => {\r\n                let {left, top, width, height} = item;\r\n                const index = this.direction.findIndex(dir => dir.id === item.id);\r\n    \r\n                if (this.direction[index].isLeft) left -= this.config.speedPlayers;\r\n                if (this.direction[index].isRight) left += this.config.speedPlayers;\r\n                if (this.direction[index].isTop) top -= this.config.speedPlayers;\r\n                if (this.direction[index].isBottom) top += this.config.speedPlayers;\r\n    \r\n                if (left < 0) left = 0;\r\n                if (left > this.config.sizeArena.width - width) left = this.config.sizeArena.width - width;\r\n                if (top < 0) top = 0;\r\n                if (top > this.config.sizeArena.height - height) top = this.config.sizeArena.height - height;\r\n    \r\n                return {...item, left, top};\r\n            });\r\n\r\n            return {bots, players};\r\n        });\r\n        \r\n        if (!this.config.gameOver) {\r\n            this.config.speedBots += 0.005;\r\n            this.config.distance += this.config.speedBots / 10000;\r\n            requestAnimationFrame(this.renderGame);\r\n            //setTimeout(this.renderGame, 1000 / 60);\r\n        }\r\n    }\r\n\r\n    gameStart = (qtPlayers) => {\r\n        this.direction = this.initDirection();\r\n        this.config = this.initConfig(qtPlayers);\r\n        this.config.gameStart = true;\r\n        this.setState(this.initState(), this.renderGame);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <GameWrapper>\r\n                <GameArena size={this.config.sizeArena}>\r\n                    <ListCars cars={this.state.bots}/>\r\n                    <ListCars cars={this.state.players}/>\r\n                    <GameDistance>\r\n                        Distance: {this.config.distance.toFixed(2)}\r\n                    </GameDistance>\r\n                    {!this.config.gameStart && \r\n                        <Settings \r\n                            controlButtons={['wasd', '↑←↓→', 'uhjk']} \r\n                            gameStart={this.gameStart} \r\n                        />\r\n                    }\r\n                </GameArena>\r\n                <TouchControl \r\n                    keyDown={this.keyDown} \r\n                    keyUp={this.keyUp} \r\n                    keys={{left: 'KeyA', right: 'KeyD', top: 'KeyW', bottom: 'KeyS'}} \r\n                />\r\n            </GameWrapper>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}
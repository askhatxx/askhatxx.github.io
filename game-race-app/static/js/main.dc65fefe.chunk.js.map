{"version":3,"sources":["components/Car.js","components/MainCars.js","components/Mode.js","components/Settings.js","components/TouchControl.js","App.js","index.js"],"names":["Car","colorCar","color","widthCar","width","heightCar","height","left","top","CarBox","style","className","styled","div","props","MainCars","cars","map","item","key","id","Mode","controlButtons","gameStart","qtPlayers","listBtn","itemKey","ModeBox","onClick","Settings","SettingsBox","index","slice","TouchControl","keyDown","keyUp","keys","TouchBox","TouchSection","TouchBtn","onMouseDown","code","onMouseUp","onTouchStart","onTouchEnd","bottom","right","button","AppClass","initDirection","isLeft","isRight","isTop","isBottom","initConfig","quantityBots","quantityPlayers","sizeArena","getSizeArena","gameOver","distance","speedBots","speedPlayers","initState","bots","initBots","config","players","initPlayers","quantity","botsCarsList","randomPosition","playersCarsList","Math","round","document","documentElement","clientWidth","clientHeight","event","i","direction","order","random","collisionCheck","car1","car2","collision","lostIndex","Set","forEach","itemCheck","indexCheck","add","itemBot","filter","has","renderGame","setState","prevState","result","length","type","findIndex","dir","requestAnimationFrame","state","addEventListener","this","removeEventListener","GameWrapper","GameArena","size","GameDistance","toFixed","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.dc65fefe.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport default function Car({color: colorCar, width: widthCar, height: heightCar, left, top}) {\r\n    return (\r\n        <CarBox {...{colorCar, widthCar, heightCar}} style={{left: `${left}px`, top: `${top}px`}}>\r\n            <div className='glass glass-f'></div>\r\n            <div className='glass glass-b'></div>\r\n            <div className='wheel wheel-f-l'></div>\r\n            <div className='wheel wheel-f-r'></div>\r\n            <div className='wheel wheel-b-l'></div>\r\n            <div className='wheel wheel-b-r'></div>\r\n        </CarBox>\r\n    );\r\n}\r\n\r\nconst CarBox = styled.div`\r\n    background: ${props => props.colorCar};\r\n    width: ${props => props.widthCar}px;\r\n    height: ${props => props.heightCar}px;\r\n    border-radius: 6px;\r\n    position: absolute;\r\n    box-shadow: 0px 4px 6px 0px rgba(0, 0, 0, .25);\r\n\r\n    .glass {\r\n        background: #444;\r\n        position: absolute;\r\n        width: 70%;\r\n        height: 20%;\r\n        left: 15%;\r\n    }\r\n\r\n    .glass-f {\r\n        top: 15%;\r\n        border-radius: 2px 2px 8px 8px;\r\n    }\r\n\r\n    .glass-b {\r\n        top: 65%;\r\n        border-radius: 8px 8px 2px 2px;\r\n    }\r\n\r\n    .wheel {\r\n        background: #444;\r\n        position: absolute;\r\n        width: 8%;\r\n        height: 20%;\r\n    }\r\n\r\n    .wheel-f-l {\r\n        top: 15%;\r\n        left: -8%;\r\n        border-radius: 3px 0 0 3px;\r\n    }\r\n\r\n    .wheel-f-r {\r\n        top: 15%;\r\n        left: 100%;\r\n        border-radius: 0 3px 3px 0;\r\n    }\r\n\r\n    .wheel-b-l {\r\n        top: 65%;\r\n        left: -8%;\r\n        border-radius: 3px 0 0 3px;\r\n    }\r\n\r\n    .wheel-b-r {\r\n        top: 65%;\r\n        left: 100%;\r\n        border-radius: 0 3px 3px 0;\r\n    }\r\n`;","import React from 'react';\r\nimport Car from './Car';\r\n\r\nexport default function MainCars({cars}) {\r\n    return (\r\n        <>\r\n            {cars.map(item => <Car key={item.id} {...item} />)}\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport default function Mode({controlButtons, gameStart, qtPlayers}) {\r\n    const listBtn = controlButtons.map(item => {\r\n        return (\r\n            <div key={item}>\r\n                {[...item].map(itemKey => <span key={itemKey}>{itemKey}</span>)}\r\n            </div>\r\n        )\r\n    });\r\n    return (\r\n        <ModeBox>\r\n            <div className='text-players'>Players</div>\r\n            <div className='qt-players'>{qtPlayers}</div>\r\n            <div className='control-info'>\r\n                <div>Control:</div>\r\n                <div className='control-list'>{listBtn}</div>\r\n            </div>\r\n            <button className='game-start' onClick={() => gameStart(qtPlayers)}>Start</button>\r\n        </ModeBox>\r\n    );\r\n}\r\n\r\nconst ModeBox = styled.div`\r\n    background: #FBC5AA;\r\n    margin: 10px;\r\n    padding: 10px;\r\n    width: 200px;\r\n    max-width: 100%;\r\n    border-radius: 8px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .text-players {\r\n        text-align: center;\r\n        font-size: 1.4rem;\r\n\r\n        @media (max-height: 768px) {\r\n            font-size: 1.0rem;\r\n        }\r\n    }\r\n\r\n    .qt-players {\r\n        text-align: center;\r\n        font-size: 2rem;\r\n\r\n        @media (max-height: 768px) {\r\n            font-size: 1.2rem;\r\n        }\r\n    }\r\n\r\n    .control-info {\r\n        flex-grow: 1;\r\n        display: flex;\r\n        font-size: 1rem;\r\n\r\n        .control-list {\r\n            margin-left: 5px;\r\n\r\n            span {\r\n                background: #f5661f;\r\n                border-radius: 4px;\r\n                display: inline-block;\r\n                margin: 0px 2px 10px;\r\n                width: 20px;\r\n                height: 20px;\r\n                line-height: 19px;\r\n                font-size: 14px;\r\n                text-transform: uppercase;\r\n                text-align: center;\r\n                color: #fff;\r\n\r\n                @media (max-height: 768px) {\r\n                    margin: 0px 2px 2px;\r\n                    width: 16px;\r\n                    height: 16px;\r\n                    line-height: 15px;\r\n                    font-size: 11px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .game-start {\r\n        background: #08AD85;\r\n        color: #fff;\r\n        width: 100%;\r\n        border: none;\r\n        border-radius: 6px;\r\n        padding: 3px 0 6px;\r\n        font-size: 1.2rem;\r\n        font-family: inherit;\r\n        line-height: 1.2;\r\n        transition: .2s;\r\n        cursor: pointer;\r\n        outline: none;\r\n\r\n        &:hover {\r\n            background: #039974;\r\n        }\r\n\r\n        @media (max-height: 768px) {\r\n            padding: 2px 0 4px;\r\n            font-size: .9rem;\r\n        }\r\n    }\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Mode from './Mode';\r\n\r\nexport default function Settings({controlButtons, gameStart}) {\r\n    return (\r\n        <SettingsBox>\r\n            {controlButtons.map((item, index) => {\r\n                return (\r\n                    <Mode \r\n                        key={item} \r\n                        controlButtons={controlButtons.slice(0, index + 1)} \r\n                        gameStart={gameStart} \r\n                        qtPlayers={index + 1} \r\n                    />\r\n                )\r\n            })}\r\n        </SettingsBox>\r\n    );\r\n}\r\n\r\nconst SettingsBox = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    width: 100%;\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport default function TouchControl({keyDown, keyUp, keys}) {\r\n    return (\r\n        <TouchBox>\r\n            <TouchSection>\r\n                <TouchBtn \r\n                    onMouseDown={() => keyDown({code: keys.left})}\r\n                    onMouseUp={() => keyUp({code: keys.left})}\r\n                    onTouchStart={() => keyDown({code: keys.left})}\r\n                    onTouchEnd={() => keyUp({code: keys.left})}\r\n                >←</TouchBtn>\r\n            </TouchSection>\r\n            <TouchSection>\r\n                <TouchBtn\r\n                    onMouseDown={() => keyDown({code: keys.top})}\r\n                    onMouseUp={() => keyUp({code: keys.top})}\r\n                    onTouchStart={() => keyDown({code: keys.top})}\r\n                    onTouchEnd={() => keyUp({code: keys.top})}\r\n                >↑</TouchBtn>\r\n                <TouchBtn\r\n                    onMouseDown={() => keyDown({code: keys.bottom})}\r\n                    onMouseUp={() => keyUp({code: keys.bottom})}\r\n                    onTouchStart={() => keyDown({code: keys.bottom})}\r\n                    onTouchEnd={() => keyUp({code: keys.bottom})}\r\n                >↓</TouchBtn>\r\n            </TouchSection>\r\n            <TouchSection>\r\n                <TouchBtn\r\n                    onMouseDown={() => keyDown({code: keys.right})}\r\n                    onMouseUp={() => keyUp({code: keys.right})}\r\n                    onTouchStart={() => keyDown({code: keys.right})}\r\n                    onTouchEnd={() => keyUp({code: keys.right})}\r\n                >→</TouchBtn>\r\n            </TouchSection>\r\n        </TouchBox>\r\n    );\r\n}\r\n\r\nconst TouchBox = styled.div`\r\n    display: flex;\r\n    padding-top: 10px;\r\n`;\r\n\r\nconst TouchSection = styled.div`\r\n    padding: 0 5px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nconst TouchBtn = styled.button`\r\n    background: #f2f2f2;\r\n    width: 80px;\r\n    height: 35px;\r\n    margin: 0px 0;\r\n    border: none;\r\n    border-radius: 6px;\r\n    color: #000;\r\n    transition: .2s;\r\n    cursor: pointer;\r\n    outline: none;\r\n    user-select: none;\r\n\r\n    &:nth-child(2) {\r\n        margin-top: 10px;\r\n    }\r\n\r\n    &:hover {\r\n        background: #d8d8d8;\r\n    }\r\n\r\n    &:active {\r\n        background: #c4c4c4;\r\n    }\r\n`;","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport MainCars from './components/MainCars';\r\nimport Settings from './components/Settings';\r\nimport TouchControl from './components/TouchControl';\r\n\r\nexport default class AppClass extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.botsCarsList = [\r\n            {color: '#1d95f9', width: 40, height: 60, left: 0, top: 0, type: 'bot', id: 'bot1'},\r\n            {color: '#1d95f9', width: 40, height: 60, left: 0, top: 0, type: 'bot', id: 'bot2'},\r\n            {color: '#0065b9', width: 50, height: 80, left: 0, top: 0, type: 'bot', id: 'bot3'},\r\n        ];\r\n        this.playersCarsList = [\r\n            {color: '#f5661f', width: 40, height: 60, left: 0, top: 0, type: 'player', id: 'player1'},\r\n            {color: '#ce40ff', width: 40, height: 60, left: 0, top: 0, type: 'player', id: 'player2'},\r\n            {color: '#fc4664', width: 40, height: 60, left: 0, top: 0, type: 'player', id: 'player3'},\r\n        ];\r\n        this.keys  = [\r\n            {left: 'KeyA', right: 'KeyD', top: 'KeyW', bottom: 'KeyS'},\r\n            {left: 'ArrowLeft', right: 'ArrowRight', top: 'ArrowUp', bottom: 'ArrowDown'},\r\n            {left: 'KeyH', right: 'KeyK', top: 'KeyU', bottom: 'KeyJ'},\r\n        ];\r\n\r\n        this.direction = this.initDirection();\r\n        this.config = this.initConfig();\r\n        this.state = this.initState();\r\n    }\r\n\r\n    initDirection = () => {\r\n        return [\r\n            {isLeft: false, isRight: false, isTop: false, isBottom: false, id: 'player1'},\r\n            {isLeft: false, isRight: false, isTop: false, isBottom: false, id: 'player2'},\r\n            {isLeft: false, isRight: false, isTop: false, isBottom: false, id: 'player3'},\r\n        ];\r\n    }\r\n\r\n    initConfig = (qtPlayers = 3) => {\r\n        return {\r\n            quantityBots: 3,\r\n            quantityPlayers: qtPlayers,\r\n            sizeArena: this.getSizeArena(),\r\n            gameOver: false,\r\n            gameStart: false,\r\n            distance: 0,\r\n            speedBots: 3,\r\n            speedPlayers: 4,\r\n        };\r\n    }\r\n\r\n    initState = () => {\r\n        return {\r\n            bots: this.initBots(this.config.quantityBots),\r\n            players: this.initPlayers(this.config.quantityPlayers),\r\n        };\r\n    }\r\n\r\n    initBots = (quantity) => {\r\n        return this.botsCarsList.slice(0, quantity).map((item, index) => {\r\n            return this.randomPosition(item, index + 1);\r\n        });\r\n    }\r\n\r\n    initPlayers = (quantity) => {\r\n        return this.playersCarsList.slice(0, quantity).map((item, index) => {\r\n            const left = Math.round((this.config.sizeArena.width / (quantity + 1) * (index + 1)) - (item.width / 2));\r\n            const top = Math.round(this.config.sizeArena.height - item.height - 20);\r\n\r\n            return {...item, left, top};\r\n        });\r\n    }\r\n\r\n    getSizeArena = () => {\r\n        const {clientWidth, clientHeight} = document.documentElement;\r\n        const width = clientWidth > 1000 ? 900 : Math.round(clientWidth / 100 * 90);\r\n        const height = Math.round(clientHeight / 100 * 96 - 90);\r\n        \r\n        return {width, height};\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.keyDown);\r\n        document.addEventListener('keyup', this.keyUp);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.keyDown);\r\n        document.removeEventListener('keyup', this.keyUp);\r\n    }\r\n\r\n    keyDown = (event) => {\r\n        for (let i = 0; i < this.config.quantityPlayers; i++) {\r\n            if (event.code === this.keys[i].left && !this.direction[i].isLeft) {\r\n                this.direction[i].isLeft = true;\r\n            } else if (event.code === this.keys[i].right && !this.direction[i].isRight) {\r\n                this.direction[i].isRight = true;\r\n            } else if (event.code === this.keys[i].top && !this.direction[i].isTop) {\r\n                this.direction[i].isTop = true;\r\n            } else if (event.code === this.keys[i].bottom && !this.direction[i].isBottom) {\r\n                this.direction[i].isBottom = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    keyUp = (event) => {\r\n        for (let i = 0; i < this.config.quantityPlayers; i++) {\r\n            if (event.code === this.keys[i].left) {\r\n                this.direction[i].isLeft = false;\r\n            } else if (event.code === this.keys[i].right) {\r\n                this.direction[i].isRight = false;\r\n            } else if (event.code === this.keys[i].top) {\r\n                this.direction[i].isTop = false;\r\n            } else if (event.code === this.keys[i].bottom) {\r\n                this.direction[i].isBottom = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    randomPosition = (item, order) => {\r\n        const left = Math.round((this.config.sizeArena.width - item.width) * Math.random());\r\n        const top = -180 * order;\r\n\r\n        return {...item, left, top};\r\n    }\r\n\r\n    collisionCheck = (car1, car2) => {\r\n        if (car1.top - (car2.top + car2.height) < 0 && (car1.top + car1.height) - car2.top > 0) {\r\n            if (car1.left - (car2.left + car2.width) < 0 && (car1.left + car1.width) - car2.left > 0) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    collision = ({bots, players}) => {        \r\n            let lostIndex = new Set();\r\n\r\n            players.forEach((item, index) => {\r\n                players.forEach((itemCheck, indexCheck) => {\r\n                    if (index !== indexCheck) {\r\n                        if (this.collisionCheck(item, itemCheck)) {lostIndex.add(index);}\r\n                    }\r\n                });\r\n                \r\n                bots.forEach((itemBot) => {\r\n                    if (this.collisionCheck(item, itemBot)) {lostIndex.add(index);}\r\n                });\r\n            });\r\n\r\n            players = players.filter((item, index) => {\r\n                if (lostIndex.has(index)) {\r\n                    bots = [...bots, item];\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            return {bots, players};\r\n    }\r\n\r\n    renderGame = () => {\r\n        this.setState(prevState => {            \r\n            const result = this.collision({bots: prevState.bots, players: prevState.players});\r\n\r\n            if (result.players.length === 0) {\r\n                this.config.gameOver = true;\r\n                this.config.gameStart = false;\r\n                return result;\r\n            }\r\n            \r\n            let bots = result.bots.map(item => {\r\n                const top = item.top + this.config.speedBots;\r\n    \r\n                if (top > this.config.sizeArena.height) {\r\n                    return this.randomPosition(item, 1);\r\n                }\r\n                \r\n                return {...item, top};\r\n            });\r\n\r\n            bots = bots.filter(item => {\r\n                if (item.type === 'player' && item.top < 0) return false;\r\n                return true;\r\n            });\r\n            \r\n            const players = result.players.map((item) => {\r\n                let {left, top, width, height} = item;\r\n                const index = this.direction.findIndex(dir => dir.id === item.id);\r\n    \r\n                if (this.direction[index].isLeft) left -= this.config.speedPlayers;\r\n                if (this.direction[index].isRight) left += this.config.speedPlayers;\r\n                if (this.direction[index].isTop) top -= this.config.speedPlayers;\r\n                if (this.direction[index].isBottom) top += this.config.speedPlayers;\r\n    \r\n                if (left < 0) left = 0;\r\n                if (left > this.config.sizeArena.width - width) left = this.config.sizeArena.width - width;\r\n                if (top < 0) top = 0;\r\n                if (top > this.config.sizeArena.height - height) top = this.config.sizeArena.height - height;\r\n    \r\n                return {...item, left, top};\r\n            });\r\n\r\n            return {bots, players};\r\n        });\r\n        \r\n        if (!this.config.gameOver) {\r\n            this.config.speedBots += 0.005;\r\n            this.config.distance += this.config.speedBots / 10000;\r\n            requestAnimationFrame(this.renderGame);\r\n            //setTimeout(this.renderGame, 1000 / 60);\r\n        }\r\n    }\r\n\r\n    gameStart = (qtPlayers) => {\r\n        this.direction = this.initDirection();\r\n        this.config = this.initConfig(qtPlayers);\r\n        this.config.gameStart = true;\r\n        this.setState(this.initState(), this.renderGame);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <GameWrapper>\r\n                <GameArena size={this.config.sizeArena}>\r\n                    <MainCars cars={this.state.bots}/>\r\n                    <MainCars cars={this.state.players}/>\r\n                    <GameDistance>\r\n                        Distance: {this.config.distance.toFixed(2)}\r\n                    </GameDistance>\r\n                    {!this.config.gameStart && \r\n                        <Settings controlButtons={['wasd', '↑←↓→', 'uhjk']} gameStart={this.gameStart} />}\r\n                </GameArena>\r\n                <TouchControl \r\n                    keyDown={this.keyDown} \r\n                    keyUp={this.keyUp} \r\n                    keys={{left: 'KeyA', right: 'KeyD', top: 'KeyW', bottom: 'KeyS'}} \r\n                />\r\n            </GameWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst GameWrapper = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: #0fc196;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst GameArena = styled.div`\r\n    width: ${props => props.size.width}px;\r\n    height: ${props => props.size.height}px;\r\n    background: #999999;\r\n    position: relative;\r\n    overflow: hidden;\r\n    border-radius: 8px;\r\n`;\r\n\r\nconst GameDistance = styled.div` \r\n    position: absolute;\r\n    top: 5px;\r\n    left: 10px;\r\n    color: #e8e8e8;\r\n`;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}